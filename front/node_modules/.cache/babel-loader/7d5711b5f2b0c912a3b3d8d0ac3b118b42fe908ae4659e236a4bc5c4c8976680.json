{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6b43ebd4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"comment-detail\"\n};\nconst _hoisted_2 = {\n  class: \"comment-contents\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"comment-contents\"\n};\nconst _hoisted_5 = {\n  class: \"board-contents\"\n};\nconst _hoisted_6 = {\n  class: \"comment-box\"\n};\nconst _hoisted_7 = {\n  class: \"contents\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"span\", null, _toDisplayString($data.created_at), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", null, _toDisplayString($data.contents), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, _toDisplayString($data.contents), 1 /* TEXT */)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","created_at","_hoisted_4","contents","_hoisted_5","_hoisted_6","_hoisted_7"],"sources":["C:\\Users\\jin\\Desktop\\car-loan-project\\front\\src\\views\\comment\\CommentDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"comment-detail\">\r\n    <div class=\"comment-contents\">\r\n      <div>\r\n        <br>\r\n        <span>{{ created_at }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"comment-contents\">\r\n      <span>{{ contents }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"board-contents\">\r\n    <div class=\"comment-box\">\r\n      <span class=\"contents\">{{ contents }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: this.$route.query,\r\n      idx: this.$route.query.idx,\r\n\r\n      contents: '',\r\n      created_at: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetView()\r\n  },\r\n  methods: {\r\n    fnGetView() {\r\n      this.$axios.get(this.$serverUrl + '/comment/' + this.idx, {\r\n        params: this.requestBody\r\n      }).then((res) => {\r\n        this.contents = res.data.contents\r\n        this.created_at = res.data.created_at\r\n      }).catch((err) => {\r\n        if (err.message.indexOf('Network Error') > -1) {\r\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.comment-box {\r\n  border: 1px solid #ccc; /* 박스의 테두리 스타일과 색상을 지정합니다. */\r\n  padding: 10px; /* 박스의 내부 여백을 조정합니다. */\r\n  border-radius: 5px; /* 박스의 테두리를 둥글게 만듭니다. */\r\n}\r\n\r\n\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAkB;gEAEzBC,mBAAA,CAAI;;EAIHD,KAAK,EAAC;AAAkB;;EAI1BA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAa;;EAChBA,KAAK,EAAC;AAAU;;uBAd5BE,mBAAA,CAAAC,SAAA,SACEF,mBAAA,CAUM,OAVNG,UAUM,GATJH,mBAAA,CAKM,OALNI,UAKM,GAJJJ,mBAAA,CAGM,cAFJK,UAAI,EACJL,mBAAA,CAA6B,cAAAM,gBAAA,CAApBC,KAAA,CAAAC,UAAU,iB,KAGvBR,mBAAA,CAEM,OAFNS,UAEM,GADJT,mBAAA,CAA2B,cAAAM,gBAAA,CAAlBC,KAAA,CAAAG,QAAQ,iB,KAGrBV,mBAAA,CAIM,OAJNW,UAIM,GAHJX,mBAAA,CAEM,OAFNY,UAEM,GADJZ,mBAAA,CAA4C,QAA5Ca,UAA4C,EAAAP,gBAAA,CAAlBC,KAAA,CAAAG,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}